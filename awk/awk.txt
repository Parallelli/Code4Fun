#notes of effective awk programming
a rule constis of a pattern followed by an action.
pattern {action}
awk 'program' input-file1 input-file2
when the program is too long, do
awk -f program-file input-file1 input-file2
//tell shell to start awk and use this program to process input files
//when the awk program is too long, we usually do it by writing it into a awk program and use -f program-file to call it
awk 'program'// you can specify no input file, awk program will treat stdin as its input to process, until EOF (crtl+z)
In awk script, find pattern uses regular expression, which is equivalent to grep in bshell

awk reads the input files one line per time. For each line, awk tries the pattern of each of the rules and runs actions when find such patterns. Then next line.

Each line in awk program is a seperate rule

awk ingores newlines after any of the following symbos and keywords: , { ? : || && do else
a newline at any other point is considered the end of the satement, but you can use \ (backslash) to get to newline and continue
